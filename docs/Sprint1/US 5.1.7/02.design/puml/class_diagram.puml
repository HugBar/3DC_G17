@startuml
class AuthController {
  -IAuthService _authService
  -ILoggingService _loggingService
  +AuthController(IAuthService, ILoggingService)
  +Task<IActionResult> LoginWithIAM(IAMLoginDto)
}

class AuthService {
  -UserManager<ApplicationUser> _userManager
  -IConfiguration _configuration
  -ILoggingService _loggingService
  +AuthService(UserManager, IConfiguration, ILoggingService)
  +Task<AuthenticationResult> LoginWithIAMAsync(IAMLoginDto)
  -Task<string> GenerateJwtToken(ApplicationUser)
  -Task<bool> ValidateIAMCredentials(string)
}

class IAMLoginDto {
  +string Token
  +string Provider
}

class AuthenticationResult {
  +bool Success
  +string Token
  +string Error
}

class ApplicationUser {
  +string Id
  +string Email
  +string UserName
  +bool EmailConfirmed
}

interface IAuthService {
  +Task<AuthenticationResult> LoginWithIAMAsync(IAMLoginDto)
}

interface ILoggingService {
  +Task LogLoginAttempt(string, string)
}

AuthController --> IAuthService
AuthController --> ILoggingService
AuthService ..|> IAuthService
AuthService --> ILoggingService
AuthService --> ApplicationUser
AuthService ..> IAMLoginDto
AuthService ..> AuthenticationResult
@enduml
