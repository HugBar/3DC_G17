@startuml
class PatientController {
  -IPatientService _patientService
  -ILoggingService _loggingService
  +PatientController(IPatientService, ILoggingService)
  +Task<IActionResult> UpdatePatient(string id, UpdatePatientDto dto)
}

class PatientService {
  -IPatientRepository _repository
  -IUnitOfWork _unitOfWork
  -IEmailService _emailService
  -ILoggingService _loggingService
  +PatientService(IPatientRepository, IUnitOfWork, IEmailService, ILoggingService)
  +Task<PatientDto> UpdatePatientAsync(string id, UpdatePatientDto dto)
  -Task ValidateUpdates(UpdatePatientDto dto)
}

class UpdatePatientDto {
  +string FirstName
  +string LastName
  +string Email
  +string PhoneNumber
  +DateTime DateOfBirth
  +string ContactInfo
  +string EmergencyContact
  +string MedicalHistory
}

class PatientDto {
  +string Id
  +string FirstName
  +string LastName
  +string Email
  +string PhoneNumber
  +DateTime DateOfBirth
  +string ContactInfo
  +string EmergencyContact
  +string MedicalHistory
  +string MedicalNr
}

interface IPatientRepository {
  +Task<Patient> GetByUserIdAsync(string id)
  +Task<Patient> Update(Patient patient)
}

interface IEmailService {
  +Task SendUpdateNotification(string email)
}

interface ILoggingService {
  +Task LogChangeAsync(string action, string id)
}

PatientController --> PatientService
PatientService --> IPatientRepository
PatientService --> IEmailService
PatientService --> ILoggingService
PatientService --> IUnitOfWork
PatientService ..> UpdatePatientDto
PatientService ..> PatientDto
@enduml
