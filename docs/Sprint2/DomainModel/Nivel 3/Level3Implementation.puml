@startuml "Hospital Management System - Implementation View"

' Style definitions
skinparam componentStyle uml2
skinparam component {
  BackgroundColor #FEFEFE
  BorderColor #333333
  ArrowColor #666666
}

' Frontend Components (React)
node "Frontend (React)" {
  package "Core" {
    component "App.js" as app
    component "Router" as router
  }
  
  package "Frontend Services" {
    component "AuthService" as frontAuthService
    component "PatientService" as frontPatientService
    component "StaffService" as frontStaffService
    component "OperationService" as frontOperationService
    component "UserService" as frontUserService
    component "Auth Context" as authContext
    component "GoogleAuthService" as googleAuthService
  }
  
  package "Components" {
    package "Staff Management" {
      component "CreateStaff" as createStaff
      component "UpdateStaff" as updateStaff
      component "StaffList" as staffList
      component "DeactivateStaff" as deactivateStaff
    }
    
    package "Patient Management" {
      component "CreatePatient" as createPatient
      component "UpdatePatient" as updatePatient
      component "PatientList" as patientList
      component "DeletePatient" as deletePatient
    }
    
    package "Operation Management" {
      component "CreateOperation" as createOperation
      component "OperationList" as operationList
    }
  }
}

' Backend Components
node "Backend (ASP.NET Core)" {
  package "Controllers" {
    component "AuthController" as authController
    component "PatientController" as patientController
    component "StaffController" as staffController
    component "OperationRequestController" as operationController
    component "UserController" as userController
    component "GoogleAuthController" as googleController
  }
  
  package "Backend Services" {
    component "AuthService" as backAuthService
    component "PatientService" as backPatientService
    component "StaffService" as backStaffService
    component "OperationRequestService" as backOperationService
    component "UserService" as backUserService
  }
  
  package "Repositories" {
    interface "IPatientRepository" as IPatientRepo
    interface "IStaffRepository" as IStaffRepo
    interface "IOperationRequestRepository" as IOperationRepo
    interface "IUserRepository" as IUserRepo
  }
  
  package "Repository Implementations" {
    component "PatientRepository" as patientRepo
    component "StaffRepository" as staffRepo
    component "OperationRequestRepository" as operationRepo
  }
}

database "MySQL Server" as mysqlDb

' Frontend Core Dependencies
app --> router
router --> authContext

' Frontend Component to Frontend Service Dependencies
createStaff --> frontStaffService
updateStaff --> frontStaffService
staffList --> frontStaffService
deactivateStaff --> frontStaffService

createPatient --> frontPatientService
updatePatient --> frontPatientService
patientList --> frontPatientService
deletePatient --> frontPatientService

createOperation --> frontOperationService
operationList --> frontOperationService

' Frontend Services to Backend Controller Dependencies
frontAuthService --> authController
frontPatientService --> patientController
frontStaffService --> staffController
frontOperationService --> operationController
frontUserService --> userController

' Backend Controller to Backend Service Dependencies
authController --> backAuthService
patientController --> backPatientService
staffController --> backStaffService
operationController --> backOperationService
userController --> backUserService

' Backend Service to Repository Interface Dependencies
backAuthService --> IUserRepo
backPatientService --> IPatientRepo
backStaffService --> IStaffRepo
backOperationService --> IOperationRepo
backUserService --> IUserRepo

' Repository Implementation Dependencies
IPatientRepo <|.. patientRepo
IStaffRepo <|.. staffRepo
IOperationRepo <|.. operationRepo

' Database Dependencies
patientRepo --> mysqlDb
staffRepo --> mysqlDb
operationRepo --> mysqlDb

' Google Auth Dependencies
googleAuthService --> googleController
googleController --> backAuthService

@enduml