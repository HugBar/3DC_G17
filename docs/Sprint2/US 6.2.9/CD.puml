@startuml PatientList Class Diagram

class PatientList {
  - navigate: useNavigate
  - location: useLocation
  - patientList: Patient[]
  - errorMessage: string
  - currentPage: number
  - totalPages: number
  - pageSize: number
  - filters: Filters
  - selectedPatient: Patient | null
  
  + handleFilterChange(event: Event): void
  + updateURL(filters: Filters, page: number): void
  + clearFilters(): void
  + handlePageChange(newPage: number): void
  + handleSelectPatient(): void
  + handleDeleteClick(patientId: string): void
  + handlePatientSelect(patientId: string): void
}

class Patient {
  + id: string
  + firstName: string
  + lastName: string
  + email: string
  + phoneNumber: string
  + medicalNr: string
  + dateOfBirth: string
  + gender: string
  + emergencyContact: string
}

class Filters {
  + firstName: string
  + lastName: string
  + email: string
  + medicalNr: string
}

class PatientService {
  + getAllPatients(filters: Filters, page: number, pageSize: number): Promise<Response>
  + getPatientById(id: string): Promise<Patient>
}

PatientList --> Patient: displays
PatientList --> Filters: uses
PatientList --> PatientService: uses

@enduml