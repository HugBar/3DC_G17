@startuml
actor Admin
participant "UpdateStaff\nComponent" as UI
participant "FormValidation" as FV
participant "StaffService" as SS
participant "Backend API" as API
database "Database" as DB

activate Admin
Admin -> UI: Navigate to Update Staff page
activate UI

UI -> UI: Get ID from URL params
UI -> SS: getStaffById(id)
activate SS
SS -> API: GET /api/staff/get-staff-profile/{id}
activate API
API --> SS: Return StaffDto
deactivate API
SS --> UI: Return staff data
deactivate SS

UI -> UI: Display staff form with data

Admin -> UI: Modify staff information
Admin -> UI: Submit form

UI -> FV: validate(staffData)
activate FV
FV --> UI: validation result
deactivate FV

alt validation successful
    UI -> SS: updateStaff(id, staffData)
    activate SS
    SS -> API: PATCH /api/staff/edit-staff-profile/{id}
    activate API
    API --> SS: Return updated StaffDto
    deactivate API
    SS --> UI: Return success
    UI -> UI: Display success message
    deactivate SS
else validation failed
    UI -> UI: Display validation errors
    UI --> Admin: Show validation errors
end

alt Admin clicks Back
    Admin -> UI: Click Back button
    UI --> Admin: Navigate to previous page
end

deactivate UI
deactivate Admin
@enduml