@startuml Add New Specialization Sequence Diagram

actor Admin
participant "CreateSpecialization\nComponent" as Frontend
participant "SpecializationService\n(Frontend)" as FrontendService
participant "SpecializationController" as Controller
participant "SpecializationService\n(Backend)" as Service
participant "SpecializationRepository" as Repository
database Database

' Initial Form Display
Admin -> Frontend: Access Add Specialization Page
activate Frontend
Frontend --> Admin: Display specialization form

' Form Submission Flow
Admin -> Frontend: Fill specialization details
Admin -> Frontend: Submit form
Frontend -> Frontend: handleSubmit()

Frontend -> FrontendService: addSpecialization(specializationData)
activate FrontendService

FrontendService -> Controller: POST /api/specializations
activate Controller

Controller -> Service: addSpecialization(specializationDto)
activate Service

' Check Existing
Service -> Repository: findByName(name)
activate Repository
Repository -> Database: Query
Database --> Repository: Result
Repository --> Service: Return result

alt Specialization Exists
    Service --> Controller: throw Error('Specialization already exists')
    Controller --> FrontendService: 409 Conflict
    FrontendService --> Frontend: Error Response
    Frontend --> Admin: Show error message
else Specialization Doesn't Exist
    Service -> Repository: create(specialization)
    Repository -> Database: Insert
    Database --> Repository: Confirm
    Repository --> Service: Return new specialization
    Service --> Controller: Return result
    Controller --> FrontendService: 201 Created
    FrontendService --> Frontend: Success Response
    Frontend -> Frontend: Clear form
    Frontend --> Admin: Show success message
end

deactivate Repository
deactivate Service
deactivate Controller
deactivate FrontendService
deactivate Frontend

@enduml