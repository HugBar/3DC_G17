@startuml
title "Staff List Management Flow"

actor User
participant StaffList
participant StaffService
participant API

activate User

User -> StaffList: Access staff list page
activate StaffList

StaffList -> StaffService: getAllStaff(filters, currentPage, pageSize)
activate StaffService

StaffService -> API: GET /api/staff/filter
activate API



alt API Error
    API --> StaffService: Return error
    StaffService --> StaffList: Throw error
    StaffList -> StaffList: setErrorMessage("Error fetching staff list")
    StaffList --> User: Display error message
else No Staff Found
    API --> StaffService: Return empty array
    StaffService --> StaffList: Return empty result
    StaffList -> StaffList: setStaffList([])
    StaffList -> StaffList: setErrorMessage("No staff members found")
    StaffList --> User: Display no results message
else Success
    API --> StaffService: Return response
    deactivate API
    StaffService --> StaffList: Return staff data
    deactivate StaffService
    StaffList -> StaffList: setStaffList(response.items)
    StaffList -> StaffList: setTotalPages(response.totalPages)
    StaffList --> User: Display staff list
end

alt Apply Filter
    User -> StaffList: Enter filter criteria
    StaffList -> StaffList: handleFilterChange(event)
    StaffList -> StaffList: updateURLWithFilters(filters, page)
    StaffList -> StaffList: setCurrentPage(1)
    StaffList -> StaffService: getAllStaff(newFilters, 1, pageSize)
else Clear Filters
    User -> StaffList: Click "Clear Filters"
    StaffList -> StaffList: clearFilters()
    StaffList -> StaffList: setFilters({})
    StaffList -> StaffList: setCurrentPage(1)
    StaffList -> StaffService: getAllStaff({}, 1, pageSize)
end

alt Select Staff Member
    User -> StaffList: Click staff card
    StaffList -> StaffService: getStaffById(staffId)
    activate StaffService
    StaffService -> API: GET /api/staff/{id}
    activate API
    API --> StaffService: Return response
    deactivate API
    alt Staff Not Found
        StaffService --> StaffList: Throw error
        StaffList -> StaffList: setErrorMessage("Error fetching staff details")
        StaffList --> User: Display error message
    else Success
        StaffService --> StaffList: Return staff details
        StaffList -> StaffList: setSelectedStaff(staffDetails)
        StaffList --> User: Display staff modal
    end
    deactivate StaffService
end

alt Update Staff
    User -> StaffList: Click "Update Staff"
    StaffList -> StaffList: handleUpdateClick()
    StaffList -> StaffList: onSelectStaff(selectedStaff.id)
    StaffList -> User: Navigate to update page
else Deactivate Staff
    User -> StaffList: Click "Deactivate Staff"
    StaffList -> StaffList: handleDeactivateClick()
    StaffList -> StaffList: onDeactivateStaff(selectedStaff.id)
    StaffList -> User: Navigate to deactivation page
else Close Modal
    User -> StaffList: Click "Close"
    StaffList -> StaffList: handleCloseDetails()
    StaffList -> StaffList: setSelectedStaff(null)
    StaffList --> User: Close staff modal
end

alt Pagination
    User -> StaffList: Click pagination control
    StaffList -> StaffList: handlePageChange(newPage)
    StaffList -> StaffList: updateURLWithFilters(filters, newPage)
    StaffList -> StaffList: setCurrentPage(newPage)
    StaffList -> StaffService: getAllStaff(filters, newPage, pageSize)
end

deactivate StaffList
deactivate User
@enduml