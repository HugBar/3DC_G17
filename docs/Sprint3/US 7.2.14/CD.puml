@startuml Patient Profile Class Diagram

class PatientProfile {
  -navigate: function
  -patientId: string
  -patient: Patient
  -medicalRecord: MedicalRecord
  -loading: boolean
  -error: string
  +useEffect(): void
  +handleUpdateMedicalRecord(): void
  +handleGoBack(): void
  +render(): JSX
}

class PatientService {
  -API_URL: string
  +getPatientById(patientId: string): Promise<Patient>
  +getAllPatients(filters: object, page: number, pageSize: number): Promise<PatientList>
  +updatePatientProfile(email: string, data: object): Promise<Patient>
  +deletePatient(patientId: string): Promise<void>
}

class MedicalRecordService {
  -API_URL: string
  +getMedicalRecord(patientId: string): Promise<MedicalRecord>
  +getAllMedicalConditions(): Promise<Condition[]>
  +getAllAllergies(): Promise<Allergy[]>
  +updateMedicalRecord(patientId: string, data: object): Promise<MedicalRecord>
}

class Patient {
  +id: string
  +firstName: string
  +lastName: string
  +email: string
  +phoneNumber: string
  +dateOfBirth: Date
  +gender: string
  +medicalNr: string
}

class MedicalRecord {
  +patientId: string
  +conditions: Condition[]
  +allergies: Allergy[]
}

class Condition {
  +name: string
  +severity: string
}

class Allergy {
  +name: string
  +severity: string
}

PatientProfile --> PatientService: uses
PatientProfile --> MedicalRecordService: uses
PatientProfile --> Patient: displays
PatientProfile --> MedicalRecord: displays
MedicalRecord "1" *-- "*" Condition: contains
MedicalRecord "1" *-- "*" Allergy: contains
Patient "1" -- "1" MedicalRecord: has

@enduml