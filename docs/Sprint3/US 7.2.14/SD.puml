@startuml PatientProfile Flow

actor User
participant "PatientProfile\nComponent" as PC
participant "patientService" as PS
participant "medicalRecordService" as MS
participant "Backend API" as API

User -> PC: Views Patient Profile
activate PC

PC -> PC: useEffect() triggers

alt No Patient ID
    PC -> PC: Display Error

    PC --> User: Display Error

else Has Patient ID
    PC -> PS: getPatientById(patientId)
    activate PS
    
    PS -> API: GET /api/patient/get-patient-profile/{id}
    activate API

    API --> PS: Return Response
    deactivate API
    PS --> PC: Return Patient Data
    deactivate PS
    PC -> MS: getMedicalRecord(patientData.medicalNr)
    activate MS
    
    MS -> API: GET /medical-records/{id}
    activate API
    API --> MS: Return Response
    deactivate API
    MS --> PC: Return Medical Record
    deactivate MS

    PC -> PC: setPatient(patientData)
    PC -> PC: setMedicalRecord(medicalRecordData)

    alt Success
        PC -> PC: Update State\n(patient & medicalRecord)
        PC -> PC: Render Profile Data
    else Error
        PC -> PC: Display Error Message
    end
    PC --> User: Display Profile/Error
end

deactivate PC

@enduml