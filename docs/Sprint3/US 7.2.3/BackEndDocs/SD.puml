@startuml
title "Search Allergies Sequence Diagram"

actor Doctor
participant AllergyRoutes
participant AllergyController
participant AllergySearchDto
participant AllergyService
participant AllergyRepository
database Database

activate Doctor
Doctor -> AllergyRoutes: GET /allergies/search?allergen&severity
activate AllergyRoutes

AllergyRoutes -> AllergyController: searchAllergies(req, res)
activate AllergyController

AllergyController -> AllergyController: Extract query params
note right: filters = {allergen, severity}

AllergyController -> AllergySearchDto: new AllergySearchDto(allergen, severity)
activate AllergySearchDto
AllergySearchDto --> AllergyController: searchDto
deactivate AllergySearchDto

AllergyController -> AllergyService: searchAllergies(filters)
activate AllergyService

AllergyService -> AllergyRepository: findByFilters(allergySearchDto)
activate AllergyRepository

AllergyRepository -> Database: Allergy.find(query)
activate Database
Database --> AllergyRepository: allergies[]
deactivate Database

AllergyRepository --> AllergyService: allergies[]
deactivate AllergyRepository

AllergyService -> AllergyService: map to AllergyDto[]
AllergyService --> AllergyController: allergies[]
deactivate AllergyService

AllergyController --> Doctor: 200 - allergies[]
deactivate AllergyController
deactivate AllergyRoutes

alt Error occurs
    AllergyController --> Doctor: 500 - {error: error.message}
end

deactivate Doctor

@enduml