@startuml
title "Sequence Diagram - Search Medical Condition"

actor Doctor
participant "MedicalConditionRoutes" as Routes
participant "MedicalConditionController" as Controller
participant "SearchMedicalConditionDto" as SearchDTO
participant "MedicalConditionService" as Service
participant "MedicalCondition\nRepository" as Repo
database "MongoDB" as DB

activate Doctor
Doctor -> Routes: GET /medical-conditions/search?name=&severity=
activate Routes

Routes -> Controller: searchMedicalConditions(req, res)
deactivate Routes

activate Controller

Controller -> Controller: Extrai parâmetros da query\n(name, severity)

Controller -> SearchDTO: new SearchMedicalConditionDto(name, severity)
activate SearchDTO
SearchDTO --> Controller: searchDto
deactivate SearchDTO

Controller -> Service: searchMedicalConditions(searchDto)
activate Service

Service -> Repo: findByFilters(searchDto)
activate Repo

Repo -> Repo: Constrói query MongoDB

Repo -> DB: find(query)
activate DB
DB --> Repo: resultados
deactivate DB

Repo --> Service: conditions
deactivate Repo

Service -> Service: Mapeia resultados para DTOs
Service --> Controller: conditions
deactivate Service

alt Sucesso
    Controller --> Doctor: status(200)\n{conditions}
else Erro
    Controller --> Doctor: status(500)\n{error: error.message}
    deactivate Controller
end

deactivate Doctor
@enduml