@startuml Update Medical Record Sequence Diagram

actor Doctor
participant Frontend as "UpdateMedicalRecord Component"
participant FrontendService as "MedicalRecordService (Frontend)"
participant Controller as "MedicalRecordController"
participant Service as "MedicalRecordService (Backend)"
participant Repository as "MedicalRecordRepository"
participant Database as "MongoDB"

Doctor -> Frontend: Access Update Medical Record Page
activate Frontend

' Initial Data Loading
Frontend -> FrontendService: getAllMedicalConditions()
Frontend -> FrontendService: getAllAllergies()
activate FrontendService
FrontendService --> Frontend: Available conditions and allergies
deactivate FrontendService

' Load Existing Record
Frontend -> FrontendService: getMedicalRecord(patientId)
activate FrontendService
FrontendService -> Controller: GET /medical-records/{patientId}
activate Controller

Controller -> Repository: findByPatientId(patientId)
activate Repository
Repository -> Database: Query
Database --> Repository: Result
Repository --> Controller: Medical Record
deactivate Repository

Controller --> FrontendService: Response
FrontendService --> Frontend: Medical Record data
deactivate FrontendService

Frontend --> Doctor: Display current conditions and allergies

' Update Process
Doctor -> Frontend: Add/Remove conditions/allergies
Doctor -> Frontend: Click Update
Frontend -> FrontendService: updateMedicalRecord(patientId, updateData)
activate FrontendService

FrontendService -> Controller: PUT /medical-records/update/{patientId}
activate Controller

Controller -> Repository: findByPatientId(patientId)
activate Repository
Repository -> Database: Query
Database --> Repository: Result
deactivate Repository

alt Record Not Found
    Controller --> FrontendService: 404 Not Found
    FrontendService --> Frontend: Error Message
else Record Found
    Controller -> Service: updatePatientConditionsAndAllergies(patientId, updateDto)
    activate Service
    
    Service -> Repository: update(patientId, updateData)
    activate Repository
    Repository -> Database: Save
    Database --> Repository: Updated Record
    Repository --> Service: Result
    deactivate Repository
    
    Service --> Controller: Updated Record
    Controller --> FrontendService: Success Response
    FrontendService --> Frontend: Success Message
    deactivate Service
end

Frontend --> Doctor: Display status message

deactivate Controller
deactivate FrontendService
deactivate Frontend

@enduml