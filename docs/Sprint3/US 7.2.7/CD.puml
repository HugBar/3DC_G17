@startuml Search Medical Record Class Diagram

' Frontend Components
class SearchMedicalRecord {
  -patientId: string
  -conditionName: string
  -allergyName: string
  -record: MedicalRecord
  -loading: boolean
  -error: string
  +handleSearch(): void
  +render(): JSX.Element
}

class MedicalRecordService {
  -API_URL: string
  +searchMedicalRecord(patientId: string, conditionName?: string, allergyName?: string): Promise<Response>
}

' Backend Components
class MedicalRecordController {
  +searchMedicalRecord(req: Request, res: Response): Promise<void>
}

class MedicalRecordService {
  +searchMedicalRecord(searchDto: SearchMedicalRecordDto): Promise<MedicalRecord>
}

class MedicalRecordRepository {
  +findByPatientId(patientId: string): Promise<MedicalRecord>
}

class SearchMedicalRecordDto {
  +patientId: string
  +conditionName: string
  +allergyName: string
  +validate(): void
}

class MedicalRecord {
  +patientId: string
  +conditions: Condition[]
  +allergies: Allergy[]
  +lastUpdated: Date
}

' Relationships
SearchMedicalRecord --> MedicalRecordService: uses
MedicalRecordController --> MedicalRecordService: uses
MedicalRecordService --> MedicalRecordRepository: uses
MedicalRecordService --> SearchMedicalRecordDto: uses
MedicalRecordController ..> SearchMedicalRecordDto: creates
MedicalRecordRepository --> MedicalRecord: manages

@enduml